---
  apiVersion: v1
  kind: Pod
  metadata:
    name: ekcp-api-master
    labels:
      app: ekcp-api-master
  spec:
    containers:
      - name: dind # Temporary needed. even if federation == true it pokes kind to check cluster available locally
        image: docker:19.03-dind
        env:
          - name: DOCKER_TLS_CERTDIR
            value: "/certs"
        resources:
          requests:
            cpu: 1m
            memory: 50Mi
        securityContext:
          privileged: true
        volumeMounts:
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /sys/fs/cgroup
            name: cgroup
          - name: dind-storage
            mountPath: /var/lib/docker
          - name: dind-certs
            mountPath: /certs
      - name: ekcp
        image: quay.io/ekcp/ekcp
        imagePullPolicy: Always
        env:
          - name: DOCKER_CERT_PATH
            value: "/certs/client"
          - name: DOCKER_TLS_VERIFY
            value: "1"
          - name: HOST
            value: "0.0.0.0"
          - name: PORT
            value: "8030"
          - name: ROUTE_REGISTER
            value: "false"
          - name: DOMAIN
            value: "nip.io"
          - name: KUBEHOST
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: DOCKER_HOST
            value: "tcp://$(KUBEHOST):2376"
          - name: FEDERATION
            value: "true"
          - name: CLIENT_TIMEOUT_SECONDS
            value: "900" # Timeout for http requests
        volumeMounts:
          - name: dind-certs
            mountPath: /certs
    volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: dind-storage
        emptyDir: {}
      - name: dind-certs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ekcp-api-master
spec:
  selector:
    app: ekcp-api-master
  ports:
    - protocol: TCP
      port: 8030
      targetPort: 8030
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ekcp-workers
spec:
  replicas: 2 # Worker replicas, scale as needed
  serviceName: "ekcp-worker"
  selector:
    matchLabels:
      app: ekcp-worker
  template:
    metadata:
      labels:
        app: ekcp-worker
    spec:
      containers:
        - name: dind
          image: docker:19.03-dind
          securityContext:
            privileged: true
          env:
            - name: DOCKER_TLS_CERTDIR
              value: "/certs"
          volumeMounts:
            - mountPath: /lib/modules
              name: modules
              readOnly: true
            - mountPath: /sys/fs/cgroup
              name: cgroup
            - name: dind-storage
              mountPath: /var/lib/docker
            - name: dind-certs
              mountPath: /certs
        - name: ekcp
          image: quay.io/ekcp/ekcp
          imagePullPolicy: Always
          env:
            - name: DOCKER_CERT_PATH
              value: "/certs/client"
            - name: DOCKER_TLS_VERIFY
              value: "1"
            - name: HOST
              value: "0.0.0.0"
            - name: PORT
              value: "8030"
            - name: ROUTE_REGISTER
              value: "false"
            - name: DOMAIN
              value: "nip.io"
            - name: KUBEHOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DOCKER_HOST
              value: "tcp://$(KUBEHOST):2376"
            - name: FEDERATION_MASTER
              value: http://ekcp-api-master:8030
            - name: CLIENT_TIMEOUT_SECONDS
              value: "500" # Timeout for http requests
            - name: EKCP_CONCURRENT_CLUSTERS
              value: "1"
          volumeMounts:
            - name: dind-certs
              mountPath: /certs
      volumes:
        - name: modules
          hostPath:
            path: /lib/modules
            type: Directory
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
            type: Directory
        - name: dind-storage
          emptyDir: {}
        - name: dind-certs
          emptyDir: {}
